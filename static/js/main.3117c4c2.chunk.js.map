{"version":3,"sources":["index.js"],"names":["socket","io","App","useState","data","setData","useEffect","on","temperature","currentData","width","height","dataKey","ReactDOM","render","document","getElementById","StrictMode"],"mappings":"iQAiBMA,EAASC,MAMPC,EAAM,SAAC,GAAQ,qBACKC,mBAAS,IADf,mBACXC,EADW,KACLC,EADK,KAWlB,OAPAC,qBAAU,WACRN,EAAOO,GAAG,aAAa,SAAAC,GACrBH,GAAQ,SAAAI,GAAW,4BAAQA,GAAR,CAAqBD,YAEzC,IAID,gCACE,iEACA,eAAC,IAAD,CAAWE,MAAO,IAAKC,OAAQ,IAAKP,KAAMA,EAA1C,UACE,cAAC,IAAD,CAAOQ,QAAQ,SACf,cAAC,IAAD,IACA,cAAC,IAAD,CAAMA,QAAQ,iBAMtBC,IAASC,OAAO,cAACZ,EAAD,IAASa,SAASC,eAAe,SAEnDH,IAASC,OACP,cAAC,IAAMG,WAAP,UACE,cAACf,EAAD,MAEFa,SAASC,eAAe,U","file":"static/js/main.3117c4c2.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nimport io from 'socket.io-client';\nimport { useEffect, useState } from 'react';\n\n\nimport {\n  Line,\n  LineChart,\n  XAxis,\n  YAxis\n} from 'recharts';\n\nconst socket = io();\n\n// const socket = io('url here',{   //This undefined could be a problem. \n//     transports: ['websocket', 'polling']\n//   });\n  \n  const App = ({}) => {\n    const [data, setData] = useState([]);\n  \n    // 1. listen for a cpu event and update the state\n    useEffect(() => {\n      socket.on('Node1Data', temperature => {\n        setData(currentData => [...currentData, temperature]);\n      });\n    }, []);\n  \n    // 2. render the line chart using the state\n    return (\n      <div>\n        <h1>Real Time Temperature Over MQTT</h1>\n        <LineChart width={500} height={300} data={data}>\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Line dataKey=\"value\" />\n        </LineChart>\n      </div>\n    );\n  };\n  \n  ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}